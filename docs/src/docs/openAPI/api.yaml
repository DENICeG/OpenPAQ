openapi: "3.0.2"
info:
  title: "OpenPAQ API"
  version: "1.1"
  description: "OpenPAQ API"
  x-logo:
    url: "./logo.png"
    altText: "OpenPAQ API"
servers:
  - url: http://localhost:8001/



paths:
  /:
    get:
      summary: Test connection
      description: Used for "Test connection" on the datasource config page
      operationId: api.endpoints.datasource_health
      tags:
        - Health Check
      responses:
        "200":
          description: Positive health check
  /metrics:
    get:
      summary: Get Metrics for Prometheus (only internal)
      description: Get Metrics for Prometheus
      operationId: api.endpoints.datasource_metrics
      tags:
        - Metrics
      responses:
        "200":
          description: get metrics
  /version:
    get:
      summary: Get Version info
      description: Get Version Info
      tags:
        - Version
      responses:
        200:
          description: get version info
  /api/v1/check:
    get:
      security:
        - bearerAuth:
            []
      summary: Perform Address Check
      description: Perform Address Check
      operationId: api.endpoints.v1.check
      tags:
        - Validation
      parameters:
        - in: query
          name: street
          required: true
          schema:
            type: string
            example: "Theodor-Stern-Kai 1"
            maxLength: 500
            description: The maximum allowed length is 500 characters
        - in: query
          name: city
          required: true
          schema:
            type: string
            example: "Frankfurt am Main"
            maxLength: 100
            description: The maximum allowed length is 100 characters
        - in: query
          name: postal_code
          required: true
          schema:
            type: string
            example: 60596
            maxLength: 50
            description: The maximum allowed length is 50 characters
        - in: query
          name: country_code
          required: true
          schema:
            type: string
            example: 'DE'
            maxLength: 2
            description: The maximum allowed length is 2 characters
        - in: query
          name: debug_details
          required: false
          schema:
            type: boolean
            example: 'false'
      responses:
        200:
          description: Returns validation results
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseWithoutDebug'
                  - $ref: '#/components/schemas/ResponseWithDebug'
        400:
          description: Request is not valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseWithoutDebug:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        postal_code:
          type: string
        country_code:
          type: string
        street_matched:
          type: boolean
        city_matched:
          type: boolean
        postal_code_matched:
          type: boolean
        city_to_postal_code_matched:
          type: boolean
        country_code_matched:
          type: boolean
        version:
          type: string
    ResponseWithDebug:
      allOf:
      - $ref: '#/components/schemas/ResponseWithoutDebug'
      - type: object
        properties:
          details:
            $ref: '#/components/schemas/DebugInformation'
    DebugInformation:
      type: object
      properties:
        parameters:
          type: object
          properties:
            city_matching_allowed_corrections:
              type: integer
            street_matching_algo:
              type: string
            street_similarity_th:
              type: number
        city_street_matches:
          type: array
          items:
            type: object
            properties:
              city:
                type: string
              street:
                type: string
              postal_code:
                type: string
              country_code:
                type: string
        city_postal_code_matches:
          type: array
          items:
            type: object
            properties:
              city:
                type: string
              postal_code:
                type: string
              country_code:
                type: string
        postal_code_street_matches:
          type: array
          items:
            type: object
            properties:
              street:
                type: string
              postal_code:
                type: string
              country_code:
                type: string


